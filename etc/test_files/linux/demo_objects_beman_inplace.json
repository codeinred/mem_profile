{"frame_table":{"pc":[93959152595141,93959152595439,93959152595556,93959152595845,93959152596016,93959152596501,93959152596821,93959152597003,93959152597333,93959152597528,139646118033013,139646118033020,139646118033193,139646118135548,139646118137009,139646118137230,139646122778864,139646125780839,139646125781102,139646125781400,139646125787095,139646125790025,139646125791164,139646125902067,139646125902321,139646127226898,139646127243630,139646127243943,139646127244157,139646127344544],"object_path":[0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,5,6,6,6,6,6,6,6,6,10,10,10,10,10],"object_address":[4293,4591,4708,4997,5168,5653,5973,6155,6485,6680,161397,161404,161577,263932,265393,265614,712944,135015,135278,135576,141271,144201,145340,256243,256497,8210,24942,25255,25469,125856],"object_symbol":[1,1,1,1,1,1,1,1,1,1,1,1,3,4,1,1,1,1,1,1,7,8,9,1,1,1,1,1,1,1],"offsets":[0,1,5,9,13,14,15,16,21,22,25,26,27,28,29,30,31,34,39,41,42,43,46,49,52,55,56,57,58,59,60],"file":[11,13,13,13,17,13,13,13,17,13,13,13,17,17,13,20,22,24,26,13,13,20,31,31,20,2,2,2,2,2,2,36,36,36,40,40,43,43,46,46,46,6,49,51,51,49,51,51,49,55,55,55,55,55,55,10,10,10,10,10],"func":[12,14,15,16,18,14,15,16,18,14,15,16,18,18,19,21,23,25,27,28,29,30,32,33,34,1,1,3,4,1,35,37,38,39,41,42,44,45,47,38,48,1,50,52,53,8,52,53,54,56,57,58,56,57,59,1,1,1,1,1],"line":[0,407,341,587,9,405,341,587,10,405,341,587,12,13,805,528,0,215,649,396,375,210,211,289,197,0,0,0,0,0,0,235,373,456,273,635,1989,712,75,63,986,0,229,631,382,126,631,382,188,40,48,57,40,48,75,0,0,0,0,0],"column":[0,59,9,9,17,25,9,9,17,25,9,9,17,1,7,8,2,25,13,4,2,8,28,7,5,0,0,0,0,0,0,13,8,1,24,32,37,23,9,36,1,0,5,34,25,5,34,25,46,9,68,25,9,68,25,0,0,0,0,0],"is_inline":[0,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0]},"type_data_table":{"size":[24,24,2408,2408,2408],"type":[60,61,62,63,64],"field_off":[0,1,1,1,1,3],"field_names":[65,70,72],"field_types":[66,71,73],"field_sizes":[24,2400,1],"field_offsets":[0,0,2400],"base_off":[0,0,1,2,3,3],"base_types":[67,68,69],"base_sizes":[24,2408,2408],"base_offsets":[0,0,0]},"event_table":[{"id":0,"type":"ALLOC","alloc_size":73728,"alloc_addr":93959286997008,"alloc_hint":0,"pc_id":[24,21,16,27,28,29],"object_info":null},{"id":1,"type":"ALLOC","alloc_size":880,"alloc_addr":93959287071776,"alloc_hint":0,"pc_id":[24,22,17,18,27,28,29],"object_info":null},{"id":2,"type":"ALLOC","alloc_size":10,"alloc_addr":93959287072928,"alloc_hint":0,"pc_id":[24,22,1,10,12,0],"object_info":null},{"id":3,"type":"ALLOC","alloc_size":20,"alloc_addr":93959287073392,"alloc_hint":0,"pc_id":[24,22,2,10,12,0],"object_info":null},{"id":4,"type":"ALLOC","alloc_size":100,"alloc_addr":93959287073488,"alloc_hint":0,"pc_id":[24,22,3,10,12,0],"object_info":null},{"id":5,"type":"FREE","alloc_size":10,"alloc_addr":93959287072928,"alloc_hint":0,"pc_id":[23,20,7,5,9,8,6,4,10,12,0],"object_info":{"trace_index":[2,3,4,5,6],"object_id":[26,25,24,23,22],"addr":[140721813541584,140721813541584,140721813541584,140721813541584,140721813541584],"size":[24,24,2408,2408,2408],"type":[60,61,64,63,62],"type_data":[0,1,4,3,2]}},{"id":6,"type":"FREE","alloc_size":20,"alloc_addr":93959287073392,"alloc_hint":0,"pc_id":[23,20,7,5,9,8,6,4,10,12,0],"object_info":{"trace_index":[2,3,4,5,6],"object_id":[30,29,24,23,22],"addr":[140721813541608,140721813541608,140721813541584,140721813541584,140721813541584],"size":[24,24,2408,2408,2408],"type":[60,61,64,63,62],"type_data":[0,1,4,3,2]}},{"id":7,"type":"FREE","alloc_size":100,"alloc_addr":93959287073488,"alloc_hint":0,"pc_id":[23,20,7,5,9,8,6,4,10,12,0],"object_info":{"trace_index":[2,3,4,5,6],"object_id":[38,37,24,23,22],"addr":[140721813541656,140721813541656,140721813541584,140721813541584,140721813541584],"size":[24,24,2408,2408,2408],"type":[60,61,64,63,62],"type_data":[0,1,4,3,2]}},{"id":8,"type":"FREE","alloc_size":880,"alloc_addr":93959287071776,"alloc_hint":0,"pc_id":[23,20,13,19,25,26,14,15,11,12,0],"object_info":null}],"strtab":["examples/build/demo_objects_beman_inplace","","/usr/lib/libc.so.6","__libc_start_main","__cxa_finalize","/usr/lib/libstdc++.so.6","build/libmp_runtime.so","_ZdlPv","malloc","_Znwm","/lib64/ld-linux-x86-64.so.2","/home/alecto/mem_profile/examples/build/demo_objects_beman_inplace","_start","/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/15.2.1/../../../../include/c++/15.2.1/bits/stl_vector.h","std::_Vector_base<std::byte, std::allocator<std::byte> >::_M_create_storage(unsigned long)","std::_Vector_base<std::byte, std::allocator<std::byte> >::_Vector_base(unsigned long, std::allocator<std::byte> const&)","std::vector<std::byte, std::allocator<std::byte> >::vector(unsigned long, std::allocator<std::byte> const&)","/home/alecto/mem_profile/examples/src/objects_beman_inplace.cpp","main","std::vector<std::byte, std::allocator<std::byte> >::~vector()","/home/alecto/mem_profile/examples/include/beman/inplace_vector/inplace_vector.h","beman::inplace_vector<std::vector<std::byte, std::allocator<std::byte> >, 100ul>::~inplace_vector()","/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/15.2.1/../../../../include/c++/15.2.1/bits/new_allocator.h","std::__new_allocator<std::byte>::deallocate(std::byte*, unsigned long)","/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/15.2.1/../../../../include/c++/15.2.1/bits/allocator.h","std::allocator<std::byte>::deallocate(std::byte*, unsigned long)","/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/15.2.1/../../../../include/c++/15.2.1/bits/alloc_traits.h","std::allocator_traits<std::allocator<std::byte> >::deallocate(std::allocator<std::byte>&, std::byte*, unsigned long)","std::_Vector_base<std::byte, std::allocator<std::byte> >::_M_deallocate(std::byte*, unsigned long)","std::_Vector_base<std::byte, std::allocator<std::byte> >::~_Vector_base()","beman::details::inplace_vector::inplace_vector_base<std::vector<std::byte, std::allocator<std::byte> >, 100ul>::~inplace_vector_base()","/usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/15.2.1/../../../../include/c++/15.2.1/bits/stl_construct.h","void std::_Destroy<std::vector<std::byte, std::allocator<std::byte> >*>(std::vector<std::byte, std::allocator<std::byte> >*, std::vector<std::byte, std::allocator<std::byte> >*)","void std::destroy<std::vector<std::byte, std::allocator<std::byte> >*>(std::vector<std::byte, std::allocator<std::byte> >*, std::vector<std::byte, std::allocator<std::byte> >*)","beman::details::inplace_vector::storage::non_trivial<std::vector<std::byte, std::allocator<std::byte> >, 100ul>::~non_trivial()","exit","/usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_alloc.cc","pool","__static_initialization_and_destruction_0","_GLOBAL__sub_I_eh_alloc.cc","/usr/include/c++/15.2.1/bits/stl_uninitialized.h","cpptrace::v1::detail::string_view* std::uninitialized_copy<cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view*>(cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view*)","cpptrace::v1::detail::string_view* std::__uninitialized_copy_a<cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view*, cpptrace::v1::detail::string_view>(cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view*, std::allocator<cpptrace::v1::detail::string_view>&)","/usr/include/c++/15.2.1/bits/stl_vector.h","void std::vector<cpptrace::v1::detail::string_view, std::allocator<cpptrace::v1::detail::string_view> >::_M_range_initialize_n<cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view const*>(cpptrace::v1::detail::string_view const*, cpptrace::v1::detail::string_view const*, unsigned long)","std::vector<cpptrace::v1::detail::string_view, std::allocator<cpptrace::v1::detail::string_view> >::vector(std::initializer_list<cpptrace::v1::detail::string_view>, std::allocator<cpptrace::v1::detail::string_view> const&)","/opt/.cpm/cpptrace/a5a2/src/prune_symbol.cpp","operator()","_GLOBAL__sub_I_prune_symbol.cpp","/home/alecto/mem_profile/mp/runtime/include/mem_profile/mem_profile.cpp","operator delete(void*)","/usr/include/c++/15.2.1/bits/atomic_base.h","std::__atomic_base<unsigned long>::fetch_add(unsigned long, std::memory_order)","std::__atomic_base<unsigned long>::operator++(int)","operator new(unsigned long)","/home/alecto/mem_profile/mp/unwind/include/mp_unwind/mp_unwind.cpp","throw_if_bad","operator|","mp::mp_unwind(unsigned long, unsigned long*, unsigned long*)","mp::mp_unwind(unsigned long, unsigned long*)","std::_Vector_base<std::byte, std::allocator<std::byte>>","std::vector<std::byte>","beman::inplace_vector<std::vector<std::byte>, 100>","beman::details::inplace_vector::inplace_vector_base<std::vector<std::byte>, 100>","beman::details::inplace_vector::storage::non_trivial<std::vector<std::byte>, 100>","_M_impl","_Vector_impl","_Vector_base<byte, allocator<byte>>","details::inplace_vector::inplace_vector_base<vector<byte, allocator<byte>>, 100UL>","storage::storage_for<vector<byte, allocator<byte>>, 100UL>","storage_data_","byte_based_storage","storage_size_","size_type"]}